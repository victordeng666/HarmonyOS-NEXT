Create the first project
If you are opening DevEco Studio for the first time, you will first enter the welcome page.

Click "Create Project" on the welcome page to enter the project creation page.

Select 'Application', then select 'Empty Ability', click 'Next' to enter the project configuration page.

In the configuration page, the detailed information is as follows:
Project name is a project name that developers can set themselves, and can be modified to their own project name based on their own choices.
Bundle name is the package name, and by default, the application ID will also use this name. The corresponding ID needs to be consistent when the application is published.
Save location is the path for saving the project, and it is recommended that users set the corresponding location themselves.
Compile SDK is a compiled version of the SDK.
Module name: Module name.
Device type: Phone, Tablet, 2-in-1 2-in-1 tablet, Car tablet
Then click 'Finish' to complete the project creation and wait for the project synchronization to complete.

Understand the Basic Engineering Catalog
reference material:
https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/application-package-structure-stage-V5

The directory structure of the project is as follows

The AppScope directory is automatically generated by DevEco Studio and cannot be changed..
Entry is the main module of the application, which stores the code, resources, etc. of HarmonyOS applications.
Oh_modules is the dependency package of the project, which stores the source files of the project dependencies.
Oh-package.json5 is an engineering level dependency configuration file used to record configuration information for imported packages.

App.json5 is the global configuration file of the application, used to store the common configuration information of the application.


BundleName is the package name.
Vendor is an application provider.
Version Code is used to distinguish application versions.
Version Name is the version number.
The icon corresponds to the display icon of the application.
Label is the application name.

Main module directory:

--Src directory
--Main folder
--The ets folder stores the ArkTS source code files (. ets files) of the modules
--The resources folder stores the resource files needed within the module
--The module.json5 file is the configuration file of the module, which contains the configuration information of the current module.
--OhosTest is the unit test directory.
--Oh-package.json5 is a module level dependency configuration information file.

In the ETS directory

Entroyability stores ability files for current ability application logic and lifecycle management.
Entrenchability: Provides extended backup and recovery capabilities
Pages stores UI interface related code files and initially generates an Index page.

The resources directory stores the common multimedia, string, and layout files of the module, which are respectively stored in the element and media folders.


The main_degesjson file stores the path configuration information of the page, and all pages that require routing redirection must be configured here.


From development state to compilation state, the files in Module will undergo the following changes:
ETS directory: ArkTS source code compilation generates abc files.
Resources directory: The resource files in the AppScope directory are merged into the resource directory under Module. If there are duplicate files in two directories, only the resource files in the AppScope directory will be retained after compilation and packaging.
Module configuration file: The fields of the app.json5 file in the AppScope directory are merged into the module.json5 file under Module, and compiled to generate the final module.json file for HAP or HSP.
